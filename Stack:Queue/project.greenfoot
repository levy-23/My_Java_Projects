#Greenfoot project file
class.Card.image=10.png
class.Deck.image=redflip.png
class.Table.image=weave.gif
dependency1.from=Table
dependency1.to=Deck
dependency1.type=UsesDependency
dependency10.from=ArrayListDeck
dependency10.to=Joker
dependency10.type=UsesDependency
dependency2.from=Table
dependency2.to=QueueDeck
dependency2.type=UsesDependency
dependency3.from=Table
dependency3.to=Card
dependency3.type=UsesDependency
dependency4.from=Deck
dependency4.to=Card
dependency4.type=UsesDependency
dependency5.from=QueueDeck
dependency5.to=Card
dependency5.type=UsesDependency
dependency6.from=QueueDeck
dependency6.to=Joker
dependency6.type=UsesDependency
dependency7.from=StackDeck
dependency7.to=Card
dependency7.type=UsesDependency
dependency8.from=StackDeck
dependency8.to=Joker
dependency8.type=UsesDependency
dependency9.from=ArrayListDeck
dependency9.to=Card
dependency9.type=UsesDependency
editor.fx.0.height=722
editor.fx.0.width=800
editor.fx.0.x=320
editor.fx.0.y=58
height=826
package.numDependencies=10
package.numTargets=7
project.charset=x-MacRoman
publish.hasSource=true
publish.locked=true
publish.longDesc=Click\ and\ drag\ the\ cards\ around,\ press\ the\ green\ button\ to\ create\ a\ new\ random\ card\ and\ hold\ the\ right\ mouse\ button\ down\ to\ filp\ the\ card\ over.\n\nThis\ may\ be\ of\ help\ to\ anyone\ wanting\ to\ implement\ card\ games\ in\ Greenfoot...\ Though\ remember\ to\ copy\ all\ the\ images\ (in\ resources/cards)\ over\ to\ your\ project\ (as\ well\ as\ the\ Card\ source\ code)\ if\ you\ want\ to\ use\ this\ in\ your\ own\ scenarios.\n\nAs\ an\ aside,\ this\ could\ also\ be\ used\ as\ a\ demo\ of\ enums\ (enumerations.)\ Have\ a\ look\ in\ the\ Card\ class\ to\ see\ why\!\n\nUpdates\:\n-\ Got\ rid\ of\ the\ button\ and\ added\ a\ deck\ instead.\n-\ You\ can\ create\ a\ normal\ deck,\ or\ specify\ the\ numbers\ of\ sets\ of\ different\ suits\ you\ want.\ You\ can\ also\ specify\ whether\ or\ not\ you\ want\ to\ include\ jokers.\n-\ When\ the\ deck\ is\ empty,\ it\ just\ shows\ an\ outline.\n-\ Press\ space\ to\ refill\ the\ deck\ and\ get\ rid\ of\ the\ cards.\n-\ The\ card\ that\ you're\ dragging\ or\ have\ dragged\ last\ now\ appears\ on\ top\ of\ all\ the\ others.
publish.shortDesc=Basic\ card\ demo
publish.tags=demo\ mouse\ with-source
publish.title=Card\ Demo
publish.url=
readme.height=58
readme.name=@README
readme.width=47
readme.x=10
readme.y=10
simulation.speed=50
target1.height=50
target1.name=Table
target1.naviview.expanded=false
target1.showInterface=false
target1.type=ClassTarget
target1.width=80
target1.x=150
target1.y=10
target2.height=50
target2.name=Joker
target2.naviview.expanded=true
target2.showInterface=false
target2.type=ClassTarget
target2.width=80
target2.x=10
target2.y=80
target3.height=50
target3.name=QueueDeck
target3.showInterface=false
target3.type=ClassTarget
target3.width=90
target3.x=0
target3.y=0
target4.height=50
target4.name=StackDeck
target4.showInterface=false
target4.type=ClassTarget
target4.width=80
target4.x=0
target4.y=0
target5.height=50
target5.name=Deck
target5.naviview.expanded=false
target5.showInterface=false
target5.type=AbstractTarget
target5.width=80
target5.x=100
target5.y=130
target6.height=50
target6.name=ArrayListDeck
target6.showInterface=false
target6.type=ClassTarget
target6.width=100
target6.x=0
target6.y=0
target7.height=50
target7.name=Card
target7.naviview.expanded=false
target7.showInterface=false
target7.type=ClassTarget
target7.width=80
target7.x=150
target7.y=70
version=3.0.0
width=1440
world.lastInstantiated=Table
xPosition=0
yPosition=23
